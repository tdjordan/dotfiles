# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  #source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# Disable bi-weekly auto-update checks
DISABLE_AUTO_UPDATE="true"
DISABLE_UPDATE_PROMPT="true"
# Disable colors in ls
DISABLE_LS_COLORS="true"
# Disable auto-setting terminal title
DISABLE_AUTO_TILE="true"
# Disable marking untracked files under VCS as dirty.
# This makes repository status checks for large repositories much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"
# Change the command execution time stamp shown in the history command output
# Optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"
# Disable initial powerlevel10k config wizard
POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
#
export DISABLE_AUTO_TITLE='true'

#declare -A ZINIT
#ZINIT[COMPINIT_OPTS]="-C"
#ZINIT[OPTIMIZE_OUT_DISK_ACCESSES]=1
### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing %F{33}ZDHARM-CONTINUUMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
  command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh.zwc ]]; then
  zinit self-update
fi

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
#zinit lucid nocd light-mode for \
#  zinit-zsh/z-a-rust \
#  zinit-zsh/z-a-as-monitor \
#  zinit-zsh/z-a-patch-dl \
#  zinit-zsh/z-a-bin-gem-node

###  Thom's environment
###
zinit wait"0" lucid is-snippet for \
  $HOME/.aliases \

zinit wait"2" lucid nocd is-snippet for \
  OMZL::functions.zsh \
  OMZL::misc.zsh \
  OMZL::directories.zsh \
  OMZL::git.zsh \
  OMZP::git/git.plugin.zsh \
  https://raw.githubusercontent.com/shihyuho/zsh-jenv-lazy/master/jenv-lazy.plugin.zsh \
  $HOME/.bash_local \
  $HOME/.dockerfunc
  #https://github.com/sainnhe/dotfiles/raw/master/.zsh-theme-gruvbox-material-dark \
  # OMZL::history.zsh \

#zinit load black7375/zsh-lazyenv

#zinit wait"8" lucid nocd is-snippet for \
  #OMZP::jenv/jenv.plugin.zsh
#zinit wait"1" lucid nocd light-mode for \
  #shihyuho/zsh-jenv-lazy

#zinit load zinit-zsh/z-a-bin-gem-node
#zinit ice from"gh-r" sbin"jenv"
#zinit load OMZP::jenv/jenv.plugin.zsh

#zinit wait"1" lucid nocd light-mode atload"zicompinit; zicdreplay" for \
zinit wait"1" lucid nocd light-mode for \
  zsh-users/zsh-autosuggestions \
  zdharma-continuum/fast-syntax-highlighting \
  hlissner/zsh-autopair

# zinit wait"1" lucid nocd light-mode for \
zinit wait"3" lucid nocd light-mode atload"zicompinit; zicdreplay" for \
  zsh-users/zsh-completions

# zinit wait"4" lucid nocd is-snippet for \
#   $HOME/.compdef.init

if [[ ! -f $HOME/Library/Caches/sfdx/autocomplete/zsh_setup ]]; then
  # zinit wait"1" lucid nocd light-mode atload"zicompinit; zicdreplay" for \
  zinit wait"2" lucid nocd light-mode for \
    $HOME/Library/Caches/sfdx/autocomplete/zsh_setup
fi

# zinit wait lucid nocd light-mode for \
  # atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    #zdharma/fast-syntax-highlighting \
  #blockf \
    #zsh-users/zsh-completions \
  #atload"!_zsh_autosuggest_start" \
    #zsh-users/zsh-autosuggestions \

# zinit ice wait"2" as"command" from"gh-r" lucid \
#   mv"zoxide*/zoxide -> zoxide" \
#   atclone"./zoxide init zsh > init.zsh" \
#   atpull"%atclone" src"init.zsh" nocompile'!'
# zinit light ajeetdsouza/zoxide

[ -f ${HOMEBREW_PREFIX}/share/zsh/site-functions/key-bindings.zsh ] && \
  zinit wait"1" lucid nocd is-snippet for \
    ${HOMEBREW_PREFIX}/share/zsh/site-functions/key-bindings.zsh
    # latoabout/skim/shell/key-bindings.zsh
    # $HOME/.skim/shell/key-bindings.zsh

###  binaries
###
# zinit wait"1a" lucid from"gh-r" as"null" for \
#   sbin"**/vivid" atload'export LS_COLORS="$(vivid generate snappy)"' \
#     @sharkdp/vivid
# export LS_COLORS="$(vivid generate snazzy 2> /dev/null)"

#zinit wait lucid nocd is-snippet for \

###  change directories without cd
###
setopt auto_cd

###  history config
###
# setopt inc_append_history
setopt share_history              # share history across instances
setopt hist_expire_dups_first     # trim duplicate entries first before unique ones
setopt hist_ignore_dups           # do not record if same as previous entry
setopt hist_ignore_space          # ignore commands that start with space
setopt hist_reduce_blanks         # remove extra blanks before recording entry
setopt hist_verify                # perform history expansion when editing buffer
setopt hist_find_no_dups          # find no duplicates even if not contiguous
setopt hist_ignore_all_dups
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt extended_history           # record start time & duration for entry in file

###  vi mode prompt
###
autoload edit-command-line ; zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# zinit as"program" make'!' atclone'./direnv hook zsh > zhook.zsh' \
#   atpull'%atclone' pick"direnv" src"zkookzsh" for \
#     direnv/direnv
zinit from"gh-r" as"program" mv"direnv* -> direnv" \
  atclone'./direnv hook zsh > zhook.zsh' atpull'%atclone' \
  pick"direnv" src="zhook.zsh" for \
    direnv/direnv

# line 1: `atuin` binary as command, from github release, only look at .tar.gz files, use the `atuin` file from the extracted archive
# line 2: setup at clone(create init.zsh, completion)
# line 3: pull behavior same as clone, source init.zsh
zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
    atclone"./atuin init zsh --disable-up-arrow > init.zsh; ./atuin gen-completions --shell zsh > _atuin" \
    atpull"%atclone" src"init.zsh"
zinit light atuinsh/atuin

PS1="READY > "
zinit wait"!" lucid nocd atload"!source ~/.p10k.zsh; _p9k_precmd" for \
  romkatv/powerlevel10k
# zinit wait"!" lucid nocd atload'!eval "$(starship init zsh)"' for \
#   starship/starship

# must be last
#zinit ice wait"3" lucid nocd atinit"zpcompinit; zpcdreplay"

function gi() { curl -sLw n https://www.gitignore.io/api/$@ ;}

#zprof
#zmodload -u zsh/zprof

### End of Zinit's installer chunk

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# source "$HOME/.ops/scripts/bash_completion.sh"
### End of Zinit's installer chunk
if command -v zoxide &>/dev/null ; then eval "$(zoxide init --cmd cd zsh)" ; fi
ulimit -n 4096

# bun completions
[ -s "/Users/tjordan/.bun/_bun" ] && source "/Users/tjordan/.bun/_bun"

# bun
# export BUN_INSTALL="/Users/tjordan/.bun"
# export PATH="$BUN_INSTALL/bin:$PATH"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
# export PATH="/Users/tjordan/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

PATH="/Users/tjordan/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/tjordan/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/tjordan/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/tjordan/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/tjordan/perl5"; export PERL_MM_OPT;

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
# [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  unset __ETC_PROFILE_NIX_SOURCED
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi
# End Nix
