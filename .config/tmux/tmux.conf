#!/usr/bin/env zsh
##########
# Convertions Used
##########
#   set     == set-option
#   setw    == set-window-option
#   bind    == bind-key
#   unbind  == unbind-key
#   display == display-message

###  UTF-8 support
###
#set -g utf8 on

set -g default-shell $SHELL

# remap prefix to ctrl-a and unbind ctrl-b
#set -g prefix C-b
#set -g prefix C-g
set -g prefix C-Space
unbind C-b
#set -g prefix C-Space
#bind Space send-prefix
#bind C-Space send-prefix
#set -g prefix C-a
#unbind C-b

###  basics
###
# start window number at 1 instead of 0
set -g base-index 1

# start pane number at 1 instead of 0
set -g pane-base-index 1

###  vi mode
###
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection


###  neovim
###
# eliminate ESC delay when using neovim inside of tmux
set -sg escape-time 0

# set only on OSX where it is required
#set -t default-command "reattach-to-user-namespace -l $SHELL"

# focus events enabeld for terminals that support them
#set -g focus-events on

##########
# Coloring tmux
##########
## set default terminal
#set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g default-terminal "alacritty"
set -g default-terminal "tmux-256color"
#set -g terminal-overrides ',xterm-256color:TC'
#set -as terminal-overrides ',xterm*:TC:smcup@rmcup@'
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
#set -a terminal-overrides ',xterm-256color:RGB'
set -a terminal-overrides ',alacritty:RGB'
#set -as terminal-features 'xterm*:extkeys'
#TERM=xterm-256color
## foreground/background
set -g status-fg white
#set -g status-bg black
#set -g status-bg colour16                         # black
set -g status-bg "#000000"                        # black
#set -g status-attr default
## window list colors (inactive)
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim
## window list colors (active)
#setw -g window-status-current-fg white            # font
#setw -g window-status-current-fg colour16            # font
#setw -g window-status-current-bg red              # tile
#setw -g window-status-current-bg yellow              # tile
#setw -g window-status-current-attr bright
## pane divider colors
#set -g pane-border-fg white
#set -g pane-border-bg colour16
#set -g pane-active-border-fg green
#set -g pane-active-border-bg colour16             # black
## pane number display
set -g display-panes-active-colour colour33       # blue
set -g display-panes-colour colour166             # orange
## alert message colors
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright
## clock
setw -g clock-mode-colour green

# constrain window size to the maximum size of any client connected to
# the window instead of to the session
setw -g aggressive-resize on

# do not auto-name my windows
setw -g automatic-rename off

#set-option -g default-shell "/usr/bin/fish"
#set -g default-shell "/usr/bin/fish"
#set -g status on

##########
# Status Bar
##########
## Left side
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
## Right side
#set -g status-right "#[fg=cyan]%d %b %R"
set -g status-right ""
## Justification : center
set -g status-justify centre
#set -g status-justify right
## UTF-8 support
#set -g status-utf8 on
## update interval
#set -g status-interval 60                         # tmux default : 15

##########
# Activity Notifications
##########
#setw -g monitor-activity on
#set -g visual-activity on

##########
# Mouse Mode
##########
## turn on mouse mode for tmux
set  -g mouse on                                  # tmux version => 2.1
#setw -g mode-mouse on                            # tmux version  < 2.1
## use mouse to select/resize panes and windows
#set -g mouse-select-pane on                      # tmux version  < 2.1
#set -g mouse-resize-pane on                      # tmux version  < 2.1
#set -g mouse-select-window on                    # tmux version  < 2.1

# scroll up/down lone line with mouse wheel
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# faster scrolling with mouse wheel using ctrl key
#bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
#bind -t vi-copy    C-WheelUpPane   halfpage-up
#bind -t vi-copy    C-WheelDownPane halfpage-down
#bind -t emacs-copy C-WheelUpPane   halfpage-up
#bind -t emacs-copy C-WheelDownPane halfpage-down


##########
# Keyboard Bindings
##########
## reload tmux config
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
#bind -n C-r source-file ~/.tmux.conf \; display "Reloaded!"
## send prefix to application opened inside of tmux
#bind C-a send-prefix
#bind C-b send-prefix

## splitting panes
#bind -T root C-\\ split-window -hd
#bind -T root C-\' split-window -vd
bind -T root C-\\ switch-client -T split
bind -T split | split-window -hd
bind -T split \\ split-window -hd
bind -T split C-\\ split-window -h
bind -T split - split-window -v
#bind -T split C-\- splitw -vd
# full split layer
bind -T split f switch-client -T split_f
bind -T split_f l split-window -hfb
bind -T split_f r split-window -hf
bind -T split_f t split-window -vfb
bind -T split_f b split-window -vf
#bind -T split_f l split-window -hfb
#bind -T split_f h split-window -hfb
#bind -T split_f j split-window -vf
#bind -T split_f k split-window -vfb
#bind -T split_f l split-window -hf

# move panes
bind -T root C-n switch-client -T move
bind -T move h swap-pane -dt -1
bind -T move l swap-pane -dt +1
bind -T move j swap-pane -D
bind -T move k swap-pane -U

## select panes

## neovim like pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
## neovim like window navigation
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
## resize panes using home keys - repeatable
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# quick jump back to last used window
#bind C-b last-window
#bind C-g last-window
bind C-Space last-window
## syncronize input across all panes
bind e setw synchronize-panes


