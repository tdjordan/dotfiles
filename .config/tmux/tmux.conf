##########
# Conversions Used
##########
#   set     == set-option
#   setw    == set-window-option
#   bind    == bind-key
#   unbind  == unbind-key
#   display == display-message

###  Extended Keys
###
###  When on or always, the escape sequence to enable extended
###  keys is sent to the terminal, if tmux knows that it is
###  supported.  tmux always recognises extended keys itself.
###  If this option is on, tmux will only forward extended keys
###  to applications when they request them; if always, tmux
###  will always forward the keys.
###
# set extended-keys always

###  Remap Prefix
###
## remap prefix to ctrl-space and unbind ctrl-b
set -g prefix C-Space
unbind C-b

set -g allow-passthrough on

###  UTF-8 support ( for tmux < 2.2 )
###
# set -g utf8 on
# set -g status-utf8 on

###  boost history limit
###
set -g history-limit 50000

###  Basic Display
###
##  start window numbers at 1 instead of 0
##
set -g base-index 1

##  start pane numbers at 1 instead of 0
##
set -g pane-base-index 1

##  renumber windows wihen a window is closed
##
set -g renumber-windows on

###  vi mode
###
setw -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection

###  neovim
###
## eliminate ESC delay when using neovim inside of tmux
set -sg escape-time 0

## set only on OSX where it is required
# set -t default-command "reattach-to-user-namespace -l $SHELL"

## focus events enabled for terminals that support them
set -g focus-events on

##########
# Coloring tmux
##########
## set default terminal
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
# set -g default-terminal "alacritty"
# set -g default-terminal "tmux-256color"
# set -g default-terminal "wezterm"
# set -g terminal-overrides ',xterm-256color:TC'
# set -g terminal-overrides ',*-256col*:TC'
# set -as terminal-overrides ',xterm*:TC:smcup@rmcup@'
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# set -a terminal-overrides ',xterm-256color:RGB'
# set -a terminal-overrides ',alacritty:RGB'
# set -as terminal-features 'xterm*:extkeys'
# TERM=xterm-256color

## Undercurl
# set -g default-terminal "${TERM}"
set -a terminal-overrides ',xterm-256color:RGB'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
# set -gas terminal-overrides ',xterm-256color:Tc'
set -ga terminal-overrides ',xterm-256color:Tc'

## foreground/background
set -g status-fg white
# set -g status-bg black
# set -g status-bg colour16                         # black
set -g status-bg "#000000"                        # black

## window list colors (inactive)
# setw -g window-status-fg cyan
# setw -g window-status-bg default
# set -g window-style 'bg=colour233'
# set -g window-style 'bg=terminal'
set -g window-style 'bg=terminal'
set -g window-active-style 'bg=black'
# set -g window-active-style 'bg=terminal'

## window list colors (active)
# setw -g window-status-current-style fg=white
# setw -g window-status-style fg=black,bg=gray
# setw -g window-status-style fg=white
# set -g window-status-current-style fg=yellow,fill="#000000"
# set -g window-status-style align=right
# set -g window-status-style fg=white
# set -g window-status-current-style fg=yellow,bright,dashed-underscore
# set -g window-status-current-style fg=yellow,bright,dotted-underscore

# set -g window-statusstyle fg=white,dim
##### set -g window-status-style fg='#000000',bg='#363728',reverse,dim
##### set -g window-status-style fg='#000000',bg='#464748',reverse,dim
# set -g window-status-style fg='#000000',bg='#465748',reverse,dim
set -g window-status-style fg='#000000',bg='#666768',reverse,dim
# set -g window-status-style fg='#000000',bg='#363728',reverse
# set -g window-status-style fg='#363728',bg='#000000',dim

### highly rated
# set -g window-status-current-style fg=cyan,bg=default,reverse,bright

# set -g window-status-current-style fg='#282828',bg=default,reverse,bright
# set -g window-status-current-style bg='#282828',fg=yellow,dim
# set -g window-status-current-style bg='#212121',fg=yellow,reverse,dim

# set -g window-status-current-style bg='#212121',fg='#805C15',reverse,dim
# set -g window-status-current-style bg='#FFE3AA',fg='#805C15',reverse,dim
# set -g window-status-current-style bg='#000000',fg='#805C15',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#805C15',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#FFE3AA',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#FFE3AA',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#FFF2C9',reverse,dim

# set -g window-status-current-style fg='#c5c8c6',bg='#f0c674',dim
# set -g window-status-current-style fg='#1d1f21',bg='#f0c674',dim
# set -g window-status-current-style fg='#1d1f21',bg='#685a0d',reverse,dim
# set -g window-status-current-style fg='#1d1f21',bg='#de835f',reverse
# set -g window-status-current-style fg='#1d1f21',bg='#de835f',reverse
# set -g window-status-current-style fg='#ebdb5f',bg='#1d1f21'
# set -g window-status-current-style fg='#000000',bg='#363728',reverse,dim
set -g window-status-current-style fg='#212121',bg='#AC9757',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#AC9757',reverse

# set -g window-status-current-style fg='#212121',bg='#FFCA28',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#AC9757',reverse,dim
# set -g window-status-current-style fg='#212121',bg='#AC9728',reverse,dim
# set -g window-status-current-style reverse,dim
# set -g window-status-current-style bg='#212121',fg='#FFE3AA',dim
# set -g window-status-current-style fg='#212121',bg='#363728',reverse,bright

# set -g window-status-last-style fg=green,dim
# set -g window-status-last-style fg=yellow,dim,reverse
# set -g window-status-last-style fg=yellow,dim,reverse,curly-underscore

### highly rated
# set -g window-status-last-style fg=cyan,bg=default,reverse,dim

# set -g window-status-last-style fg='#212121',bg=yellow,reverse,dim
# set -g window-status-last-style fg='#212121',bg='#ebdbb2',reverse,dim
# set -g window-status-last-style fg='#000000',bg='#ebdbb2',reverse,dim
set -g window-status-last-style fg='#000000',bg='#805C15',reverse,dim
# set -g window-status-last-style fg='#000000',bg='#363728',reverse,dim
# set -g window-status-last-style fg='#000000',bg='#553900',reverse,dim

# set -g window-status-last-style fg=black,bg=yellow,dim
# set -g window-status-last-style reverse
# set -g window-status-format '#{active_window_index}'
# set -g window-status-format ' #{?window_last_flag,-,#{window_index}}#{?window_zoomed_flag,Z,''} #{window_name} '
set -g window-status-format ' #{?window_zoomed_flag,Z,#{?window_last_flag,-,#{window_index}}} #{window_name} '
set -g window-status-current-format ' #{?window_zoomed_flag,Z,*} #{window_name} '
# set -g window-status-current-format ' #{window_flags} #{window_name} '
# set -g window-status-format ' #I #{window_name} '
# set -g window-status-current-format ' #F #{window_name} '
# setw -g window-status-current-fg white            # font
# setw -g window-status-current-fg colour16            # font
# setw -g window-status-current-bg red              # tile
# setw -g window-status-current-bg yellow              # tile

## pane divider colors
# set -g pane-border-style        fg=blue
# set -g pane-active-border-style fg=blue
# set -g pane-border-style        fg=teal
# set -g pane-active-border-style fg=teal
## when `synchronize-panes` is on, turn the pane borders red
# set -g pane-border-style        '#{?synchronize-panes,fg=red,fg=black,bg=black}'
# set -g pane-border-style        '#{?synchronize-panes,fg=red,fg=grey,bg=black}'
# set -g pane-active-border-style '#{?synchronize-panes,fg=red,fg=teal}'
# set -g pane-border-style        '#{?synchronize-panes,fg=red,fg=black,bg=terminal}'
set -g pane-border-style        '#{?synchronize-panes,fg=red,fg=black,bg=terminal}'
set -g pane-active-border-style '#{?synchronize-panes,fg=red,fg=purple,bg=black}'

###
### pane-border-format : #{?pane_active,#[reverse],}#{pane_index}#[default] "#{pane_title}"
###

## pane number display
set -g display-panes-active-colour colour33       # blue
set -g display-panes-colour colour166             # orange

## alert message colors
# set -g message-fg white
# set -g message-bg black

## clock
setw -g clock-mode-colour green

## constrain window size to the maximum size of any client connected to
## the window instead of to the session
setw -g aggressive-resize on

## do not auto-name my windows
setw -g automatic-rename off

set -g default-shell /bin/zsh
# set -g default-shell "/usr/bin/fish"
# set -g status on

##########
# Status Bar
##########
###  Left side
###
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"

### Right side
###
# set -g status-right "#[fg=cyan]%d %b %R"
set -g status-right ""

###  Justification : center
###
set -g status-justify centre
# set -g status-justify right
# set -g window-status-separator " | "
# set -g window-status-separator "|"
# set -g window-status-separator "/"
# set -g window-status-separator " "
set -g window-status-separator ""

## update interval
# set -g status-interval 60                         # tmux default : 15

##########
# Activity Notifications
##########
# set -g monitor-activity on
# set -g visual-activity on

##########
# Mouse Mode
##########
###  turn on mouse mode for tmux
###
set  -g mouse on                                  # tmux version => 2.1
# setw -g mode-mouse on                            # tmux version  < 2.1

###  use mouse to select/resize panes and windows
###
# set -g mouse-select-pane on                      # tmux version  < 2.1
# set -g mouse-resize-pane on                      # tmux version  < 2.1
# set -g mouse-select-window on                    # tmux version  < 2.1

###  scroll up/down lone line with mouse wheel
###
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

###  faster scrolling with mouse wheel using ctrl key
###
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind -t vi-copy    C-WheelUpPane   halfpage-up
# bind -t vi-copy    C-WheelDownPane halfpage-down
# bind -t emacs-copy C-WheelUpPane   halfpage-up
# bind -t emacs-copy C-WheelDownPane halfpage-down


##########
# Keyboard Bindings
##########

###  reload tmux config
###
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

###  sessions
###
bind S new-session

###  send prefix to application opened inside of tmux
###
# bind C-a send-prefix
# bind C-b send-prefix

###  Layer : Splitting Panes
###
bind -T root  C-\\ switch-client -T   split

##  horizontal
##
bind -T split \\   split-window  -hd -c '#{pane_current_path}'
bind -T split C-\\ split-window  -h  -c '#{pane_current_path}'
bind -T split |    split-window  -hd -c '#{pane_current_path}' -p 33

##  vertical
##
bind -T split -    split-window  -v  -c '#{pane_current_path}'
bind -T split _    split-window  -v  -c '#{pane_current_path}' -p 33

###  Layer : (f)ull splits
###
bind -T split f   switch-client -T    split_f
bind -T split_f l split-window  -hfb -c '#{pane_current_path}'
bind -T split_f r split-window  -hf  -c '#{pane_current_path}'
bind -T split_f t split-window  -vfb -c '#{pane_current_path}'
bind -T split_f b split-window  -vf  -c '#{pane_current_path}'
# bind -T split_f l split-window -hfb
# bind -T split_f h split-window -hfb
# bind -T split_f j split-window -vf
# bind -T split_f k split-window -vfb
# bind -T split_f l split-window -hf

###  move pane within the same window
###
# bind -T root C-i switch-client -T   move
# bind -T move h   swap-pane     -dt -1
# bind -T move l   swap-pane     -dt +1
# bind -T move j   swap-pane     -D
# bind -T move k   swap-pane     -U

###  move pane to a different window ( selected from list )
###
bind m choose-window "join-pane -h -t %%"
bind M choose-window "join-pane -v -t %%"

###  swap window index position with another
###
###    -t : recent window number is overridden to current window number ( focus on swapped window )
###    -s : recent window number rmains unchanged ( focus follows window across sessions )
###
bind W choose-window "swap-window -t %1"
bind P swap-window -t -1\; select-window -t -1
bind N swap-window -t +1\; select-window -t +1
# bind W choose-window "swap-window -s %1"
# bind L choose-window "swap-window -t -1"

###  kill pane / window / session
###
# bind-key x conrim-before -p "kill-pane $P? (y/n)" kill-pane
# bind-key X conrim-before -p "kill-window $W? (y/n)" kill-window
# bind-key Q conrim-before -p "kill-session $S? (y/n)" kill-session

## select panes

###  neovim like pane navigation
###
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

###  tmux.nvim integration
###
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

##  tmux delegations to neovim
##
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -n 'M-h' select-pane -L
bind-key -n 'M-j' select-pane -D
bind-key -n 'M-k' select-pane -U
bind-key -n 'M-l' select-pane -R

##  tmux delegatikons?
##
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

###  neovim like window navigation
###
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
# bind -r C-m select-window -t :-
# bind -r C-, select-window -t :+

###  resize panes using home keys - repeatable
###
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

###  quick jump back to last used window
###
bind C-Space last-window

###  synchronize input across all panes
###
bind e setw synchronize-panes

###  use telescope-tmux for picking sessions & windows
###
# bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
# bind w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows  quit_on_select=true"

###  Convenience Scripting
###
##  integration : cheat sheet ( example )
##
bind -r i run-shell "tmux new-window cht.sh"

# bind-key -T prefix C-g split-window \
#   "$SHELL --login -i -c 'navi --print | head -c -1 | tmux load-buffer -b tmp - ; tmux paste-buffer -p -t {last} -b tmp -d'"
