##########
# Convertions Used
##########
#   set     == set-option
#   setw    == set-window-option
#   bind    == bind-key
#   unbind  == unbind-key
#   display == display-message

###  Extended Keys
###
###  When on or always, the escape sequence to enable extended
###  keys is sent to the terminal, if tmux knows that it is
###  supported.  tmux always recognises extended keys itself.
###  If this option is on, tmux will only forward extended keys
###  to applications when they request them; if always, tmux
###  will always forward the keys.
###
#set extended-keys always

###  UTF-8 support
###
#set -g utf8 on

#set -g default-shell $SHELL
#set -g default-shell zsh

# remap prefix to ctrl-a and unbind ctrl-b
#set -g prefix C-b
#set -g prefix C-g
set -g prefix C-Space
unbind C-b
#set -g prefix C-Space
#bind Space send-prefix
#bind C-Space send-prefix
#set -g prefix C-a
#unbind C-b

###  basics
###
# start window number at 1 instead of 0
set -g base-index 1

# start pane number at 1 instead of 0
set -g pane-base-index 1

###  vi mode
###
setw -g mode-keys vi
# bind -T copy-mode-vi v send-keys -X begin-selection


###  neovim
###
# eliminate ESC delay when using neovim inside of tmux
set -sg escape-time 0

# set only on OSX where it is required
#set -t default-command "reattach-to-user-namespace -l $SHELL"

# focus events enabeld for terminals that support them
set -g focus-events on

##########
# Coloring tmux
##########
## set default terminal
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g default-terminal "alacritty"
#set -g default-terminal "tmux-256color"
# set -g terminal-overrides ',xterm-256color:TC'
#set -g terminal-overrides ',*-256col*:TC'
#set -as terminal-overrides ',xterm*:TC:smcup@rmcup@'
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
#set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -a terminal-overrides ',xterm-256color:RGB'
# set -a terminal-overrides ',alacritty:RGB'
# set -as terminal-features 'xterm*:extkeys'
#TERM=xterm-256color

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

## foreground/background
set -g status-fg white
#set -g status-bg black
#set -g status-bg colour16                         # black
set -g status-bg "#000000"                        # black
#set -g status-attr default
## window list colors (inactive)
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim
## window list colors (active)
#setw -g window-status-current-fg white            # font
#setw -g window-status-current-fg colour16            # font
#setw -g window-status-current-bg red              # tile
#setw -g window-status-current-bg yellow              # tile
#setw -g window-status-current-attr bright
## pane divider colors
#set -g pane-border-fg white
#set -g pane-border-bg colour16
set -g pane-border-style        fg=blue
set -g pane-active-border-style fg=blue
#set -g pane-border-style        fg=white
#set -g pane-active-border-style fg=white
#set -g pane-border-style        fg=black
#set -g pane-active-border-style fg=black
#set -g pane-active-border-fg green
#set -g pane-active-border-bg colour16             # black
#set -g pane-active-border-fg yellow
#set -g pane-active-border-bg colour16             # black
## pane number display
set -g display-panes-active-colour colour33       # blue
set -g display-panes-colour colour166             # orange
## alert message colors
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright
## clock
setw -g clock-mode-colour green

# constrain window size to the maximum size of any client connected to
# the window instead of to the session
setw -g aggressive-resize on

# do not auto-name my windows
setw -g automatic-rename off

#set-option -g default-shell "/usr/bin/fish"
#set -g default-shell "/usr/bin/fish"
#set -g status on

##########
# Status Bar
##########
## Left side
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"
## Right side
#set -g status-right "#[fg=cyan]%d %b %R"
set -g status-right ""
## Justification : center
set -g status-justify centre
#set -g status-justify right
set -g window-status-separator " | "
## UTF-8 support
#set -g status-utf8 on
## update interval
#set -g status-interval 60                         # tmux default : 15

##########
# Activity Notifications
##########
#setw -g monitor-activity on
#set -g visual-activity on

##########
# Mouse Mode
##########
## turn on mouse mode for tmux
set  -g mouse on                                  # tmux version => 2.1
#setw -g mode-mouse on                            # tmux version  < 2.1
## use mouse to select/resize panes and windows
#set -g mouse-select-pane on                      # tmux version  < 2.1
#set -g mouse-resize-pane on                      # tmux version  < 2.1
#set -g mouse-select-window on                    # tmux version  < 2.1

###  scroll up/down lone line with mouse wheel
###
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# faster scrolling with mouse wheel using ctrl key
#bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
#bind -t vi-copy    C-WheelUpPane   halfpage-up
#bind -t vi-copy    C-WheelDownPane halfpage-down
#bind -t emacs-copy C-WheelUpPane   halfpage-up
#bind -t emacs-copy C-WheelDownPane halfpage-down


##########
# Keyboard Bindings
##########

###  reload tmux config
###
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

###  sessions
###
bind S new-session

###  send prefix to application opened inside of tmux
###
#bind C-a send-prefix
#bind C-b send-prefix

###  splitting panes
###
bind -T root  C-\\ switch-client -T   split
# horizontal
bind -T split \\   split-window  -hd -c '#{pane_current_path}'
bind -T split C-\\ split-window  -h  -c '#{pane_current_path}'
bind -T split |    split-window  -hd -c '#{pane_current_path}' -p 33
# vertical
bind -T split -    split-window  -v  -c '#{pane_current_path}'
bind -T split _    split-window  -v  -c '#{pane_current_path}' -p 33
###  (f)ull split layer
bind -T split f   switch-client -T    split_f
bind -T split_f l split-window  -hfb -c '#{pane_current_path}'
bind -T split_f r split-window  -hf  -c '#{pane_current_path}'
bind -T split_f t split-window  -vfb -c '#{pane_current_path}'
bind -T split_f b split-window  -vf  -c '#{pane_current_path}'
#bind -T split_f l split-window -hfb
#bind -T split_f h split-window -hfb
#bind -T split_f j split-window -vf
#bind -T split_f k split-window -vfb
#bind -T split_f l split-window -hf

###  move pane within the same window
###
# bind -T root C-i switch-client -T   move
# bind -T move h   swap-pane     -dt -1
# bind -T move l   swap-pane     -dt +1
# bind -T move j   swap-pane     -D
# bind -T move k   swap-pane     -U

###  move pane to a different window ( selected from list )
###
bind m choose-window "join-pane -h -t %%"
bind M choose-window "join-pane -v -t %%"

###  swap window index position with another
###
bind W choose-window "swap-window -t %1"

###  kill pane / window / session
###
#bind-key x conrim-before -p "kill-pane $P? (y/n)" kill-pane
#bind-key X conrim-before -p "kill-window $W? (y/n)" kill-window
#bind-key Q conrim-before -p "kill-session $S? (y/n)" kill-session

## select panes

###  neovim like pane navigation
###
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
###  navigate integration with tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

###  neovim like window navigation
###
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
#bind -r C-m select-window -t :-
#bind -r C-, select-window -t :+

###  resize panes using home keys - repeatable
###
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

###  quick jump back to last used window
###
bind C-Space last-window

###  syncronize input across all panes
###
bind e setw synchronize-panes

###  use telescope-tmux for picking sessions & windows
###
# bind s display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux sessions quit_on_select=true"
# bind w display-popup -E -w 80% -h 80% nvim -c ":Telescope tmux windows  quit_on_select=true"

set-option -g history-limit 50000

bind -r i run-shell "tmux new-window cht.sh"
