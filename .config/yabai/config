#!/usr/bin/env sh

# export WINDOW_COLOR_STACKED="0xc00000ff"    # green
# export WINDOW_COLOR_STACKED="0xc0ff00ff"    # violet
# export WINDOW_COLOR_STACKED="0xc000ffff"    # cyan
# export WINDOW_COLOR_STACKED="0xc0ffff00"    # yellow
# export WINDOW_COLOR_STACKED="0xffffff00"    # yellow lighter
# export WINDOW_COLOR_NORMALS="0xc0e2e2e3"
# export WINDOW_COLOR_FOCUSED="0x88ff00ff"    # purple ( 0xFF00FF )
# export WINDOW_COLOR_RESIZED="0xff0000ff"
# export WINDOW_COLOR_ZOOMEDP="0x880000ff"

###
###  Scripting Addition Configuration
###
# create a new file for writing - visudo uses the vim editor by default.
# go read about this if you have no idea what is going on.

# sudo visudo -f /private/etc/sudoers.d/yabai

# input the line below into the file you are editing.
#  replace <yabai> with the path to the yabai binary (output of: which yabai).
#  replace <user> with your username (output of: whoami).
#  replace <hash> with the sha256 hash of the yabai binary (output of: shasum -a 256 $(which yabai)).
#   this hash must be updated manually after upgrading yabai.

# <user> ALL=(root) NOPASSWD: sha256:<hash> <yabai> --load-sa

# If you know what you are doing, the following one-liner can be used to update the sodoers file correctly:
# echo "$(whoami) ALL=(root) NOPASSWD: sha256:$(shasum -a 256 $(which yabai) | cut -d " " -f 1) $(which yabai) --load-sa" | sudo tee /private/etc/sudoers.d/yabai

# After the above edit has been made, add the following to the top of the yabairc config file.
# for this to work you must configure sudo such that
# it will be able to run the command without password

# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
# sudo yabai --load-sa
# yabai -m signal --add event=space_changed action="hs -A -c 'stackline.manager:update({ forceRedraw = true })'"

###
###   bar settings
###

### External Bar
#
#   Specify top and bottom padding for a potential custom bar
#
#     options: [ <main|all|off>:<top padding>:<bottom padding> ]
#
#       main : apply the given padding to only spaces located on the main display
#       all  : apply the given padding to all  spaces regardless of their  display
#       off  : do not apply any special padding
# yabai -m config external_bar                 off
# yabai -m config external_bar                 main:0:28
# yabai -m config external_bar                 all:0:28

###
###   global settings
###

### Mouse Modifications
#
#   yabai allows modifying the way macOS presents windows.
#
#     floating windows are always on top ( default: off )
# yabai -m config window_topmost               off
#
#     modify window shadows ( default: on, options: [ on, off, float ]
#
#       example: show shadows only for floating windows
#                yabai -m config window_shadow float
yabai -m config window_shadow                off
#
#     window opacity ( default: off )
#
#       example: render all unfocused windows with 90% opacity
#                yabai -m config window_opacity on
#                yabai -m config active_window_opacity 1.0
#                yabai -m config normal_window_opacity 0.9
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config insert_feedback_color        0xaad75f5f

### Split Ratios
#
#   Auto balance makes it so all windows always occupy the same space, independent of how deeply nested they are in the window tree.
#   When a new window is inserted or a window is removed, the split ratios will be automatically adjusted.
#
#     on or off ( default: off)
yabai -m config auto_balance                 off
#
#   If auto balance is disabled, the split ratio defines how much space each window occupies after a new split is created.
#   A value of 0.5 means that both old and new window occupy the same space;
#   a value of 0.2 means that the old window occupies 20% of the available space and the new window occupies 80% of the available space.
#   New windows are inserted at the right or bottom side. The ratio needs to be between 0 and 1.
#
#     Floating oint value between 0 and 1 ( default: 0.5 )
yabai -m config split_ratio                  0.50

### Mouse Support
#
#   When you drag a tiled window onto another, yabai swaps their positions in the window tree.
#   If you resize a tiled window, yabai will adjust splits to fit automatically.
#
yabai -m config mouse_drop_action stack
#
#   Additionally, yabai can enable you to move and resize windows by clicking anywhere on them while holding a modifier key.
#
#     set focus follows mouse mode ( default: off, options: [ off, autoraise, autofocus ] )
yabai -m config focus_follows_mouse          off
#
#     when focusing a window, put the mouse at its center ( default: off )
yabai -m config mouse_follows_focus          off
#
#     keyboard modifier used for moving and resizing windows ( optoons: [ cmd, alt, shift, ctrl, fn ] )
yabai -m config mouse_modifier               fn
#
#     action performed when pressing *mouse_modifier + button* ( options: [ move, resize ] )
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

###
###   tiling settings
###

### Layout
#
#   Layout defines whether windows are tiled ( managed / bsp ) or left alone ( float )
#   This setting can be defined on a per-space basis.
#
# bsp or float ( default: bsp )
yabai -m config layout                       bsp
#
#   By default, new windows become the right or bottom split when tiled, which can be changed to left or top.
#
#     first_child  : new window spawns to the left  if vertical split, or top    if horizontal split
#     second_child : new window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement             second_child

### Padding and Gaps
#
#   When tiling windows, yabai can maintain gaps between windows and padding towards menu bar, dock and screen edges.
#   This setting can be defined on a per-space basis.
yabai -m config      \
  top_padding     5  \
  bottom_padding  5  \
  left_padding    5  \
  right_padding   5  \
  window_gap      10

###
###   window management rules
###
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^zoom.us$" manage=off
yabai -m rule --add app="^.*Remote Access$" manage=off
# yabai -m rule --add app="^Spotify$" space=6
yabai -m rule --add app="^Docker" manage=off
yabai -m rule --add app="^Raycast$" manage=off

#yabai -m signal --add event=window_created title="^Intellectual Property Risk!$" \
  #action="yabai -m window ${YABAI_WINDOW_ID} --close"

yabai -m signal --add event=window_moved \
  action="set-border-color"

yabai -m signal --add event=window_resized \
  action="set-border-color"

yabai -m signal --add event=window_focused \
  action="set-border-color"

yabai -m config window_opacity on
yabai -m signal --add event=window_focused \
  action="yabai -m config active_window_opacity 1.0"

# echo "yabai configuration loaded.."

borders
