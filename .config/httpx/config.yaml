# httpx config file
# generated by https://github.com/projectdiscovery/goflags

# input file containing list of hosts to process
#list: 

# file containing raw request
#request: 

# display status code
#status-code: false

# display wappalyzer based technology detection
#tech-detect: false

# display content-length
#content-length: false

# display server header
#web-server: false

# display content-type header
#content-type: false

# display response body line count
#line-count: false

# display response body word count
#word-count: false

# display the response time
#response-time: false

# display page title
#title: false

# display location header
#location: false

# display request method
#method: false

# display server using websocket
#websocket: false

# display host ip
#ip: false

# display host cname
#cname: false

# display if cdn in use
#cdn: false

# display probe status
#probe: false

# match response with given status code (-mc 200,302)
#match-code: 

# match response with given content length (-ml 100,102)
#match-length: 

# match response with given string
#match-string: 

# match response with specific regex
#match-regex: 

# display response content with matched regex
#extract-regex: 

# match response body line count
#match-line-count: 

# match response body word count
#match-word-count: 

# match response with specific favicon
#match-favicon: []

# filter response with given status code (-fc 403,401)
#filter-code: 

# filter response with given content length (-fl 23,33)
#filter-length: 

# filter response with specific string
#filter-string: 

# filter response with specific regex
#filter-regex: 

# filter response body line count
#filter-line-count: 

# filter response body word count
#filter-word-count: 

# filter response with specific favicon
#filter-favicon: []

# number of threads
#threads: 50

# maximum requests to send per second
#rate-limit: 150

# probes for favicon ("favicon.ico" as path) and display phythonic hash
#favicon: false

# perform tls(ssl) data grabbing
#tls-grab: false

# send http probes on the extracted tls domains
#tls-probe: false

# send http probes on the extracted csp domains
#csp-probe: false

# http1.1 pipeline probe
#pipeline: false

# http2 probe
#http2: false

# vhost probe
#vhost: false

# port to scan (nmap syntax: eg 1,2-10,11)
#ports: Custom Ports

# file or comma separated paths to request
#path: 

# file or comma separated paths to request (deprecated)
#paths: 

# file to write output results
#output: 

# store http response to output directory
#store-response: false

# store http response to custom directory
#store-response-dir: 

# store output in csv format
#csv: false

# store output in jsonl(ines) format
#json: false

# include http request/response in json output (-json only)
#include-response: false

# include redirect http chain in json output (-json only)
#include-chain: false

# include http redirect chain in responses (-sr only)
#store-chain: false

# list of custom resolvers (file or comma separated)
#resolvers: []

# allowed list of ip/cidr's to process (file or comma separated)
#allow: Custom Global List

# denied list of ip/cidr's to process (file or comma separated)
#deny: Custom Global List

# enable random user-agent to use
#random-agent: true

# custom header to send with request
#header: Custom Global Headers

# http proxy, eg http://127.0.0.1:8080
#proxy: 

# send raw requests skipping golang normalization
#unsafe: false

# resume scan using resume.cfg
#resume: false

# follow http redirects
#follow-redirects: false

# max number of redirects to follow per host
#max-redirects: 10

# follow redirects on the same host
#follow-host-redirects: false

# get a list of vhosts as input
#vhost-input: false

# request methods to use, use 'all' to probe all http methods
#x: 

# post body to include in http request
#body: 

# stream mode - start elaborating input targets without sorting
#stream: false

# disable dedupe input items (only used with stream mode)
#skip-dedupe: false

# probe all the ips associated with same host
#probe-all-ips: false

# leave default http/https ports (eg. http://host:80 - https//host:443
#leave-default-ports: false

# silent mode
#silent: false

# verbose mode
#verbose: false

# display version
#version: false

# disable color in output
#no-color: false

# debug mode
#debug: false

# show all sent requests
#debug-req: false

# show all received responses
#debug-resp: false

# display scan statistic
#stats: false

# display both probbed protocol (https and http)
#no-fallback: false

# probe with input protocol scheme
#no-fallback-scheme: false

# max error count per host before skipping remaining path/s
#max-host-error: 30

# skip full port scans for cdns (only checks for 80,443)
#exclude-cdn: false

# number of retries
#retries: 0

# timeout in seconds
#timeout: 5

# max response size to save in bytes
#response-size-to-save: 2147483647

# max response size to read in bytes
#response-size-to-read: 2147483647
